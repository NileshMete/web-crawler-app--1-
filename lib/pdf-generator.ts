interface CrawledPage {
  id: string
  url: string
  title: string
  content: string
  status: string
  crawledAt?: string
  wordCount?: number
  summary?: string
}

export async function generatePDF(page: CrawledPage): Promise<Buffer> {
  // Simple HTML to PDF conversion
  const html = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>${page.title}</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          margin: 40px;
          color: #333;
        }
        .header {
          border-bottom: 2px solid #333;
          padding-bottom: 20px;
          margin-bottom: 30px;
        }
        .title {
          font-size: 24px;
          font-weight: bold;
          margin-bottom: 10px;
        }
        .url {
          color: #666;
          font-size: 14px;
          margin-bottom: 5px;
        }
        .meta {
          color: #888;
          font-size: 12px;
        }
        .summary {
          background: #f5f5f5;
          padding: 15px;
          border-left: 4px solid #007acc;
          margin: 20px 0;
        }
        .content {
          white-space: pre-wrap;
          line-height: 1.8;
        }
        .footer {
          margin-top: 40px;
          padding-top: 20px;
          border-top: 1px solid #ddd;
          text-align: center;
          color: #888;
          font-size: 12px;
        }
      </style>
    </head>
    <body>
      <div class="header">
        <div class="title">${page.title}</div>
        <div class="url">${page.url}</div>
        <div class="meta">
          Crawled: ${page.crawledAt ? new Date(page.crawledAt).toLocaleString() : "Unknown"}
          ${page.wordCount ? ` | ${page.wordCount} words` : ""}
        </div>
      </div>
      
      ${
        page.summary
          ? `
        <div class="summary">
          <strong>Summary:</strong><br>
          ${page.summary}
        </div>
      `
          : ""
      }
      
      <div class="content">
        ${page.content}
      </div>
      
      <div class="footer">
        Generated by Smart Web Crawler | Made with love by Nilesh ❤️
      </div>
    </body>
    </html>
  `

  // For now, return a simple text-based PDF representation
  // In production, you would use a library like puppeteer or jsPDF
  const textContent = `
${page.title}
${"=".repeat(page.title.length)}

URL: ${page.url}
Crawled: ${page.crawledAt ? new Date(page.crawledAt).toLocaleString() : "Unknown"}
${page.wordCount ? `Word Count: ${page.wordCount}` : ""}

${page.summary ? `SUMMARY:\n${page.summary}\n\n` : ""}

CONTENT:
${page.content}

---
Generated by Smart Web Crawler
Made with love by Nilesh ❤️
  `

  return Buffer.from(textContent, "utf-8")
}
